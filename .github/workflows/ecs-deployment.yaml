name: Build Docker Image and Deploy to ECS
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  NODE_DOCKER_IMAGE: elearning-auth-repo
  REACT_DOCKER_IMAGE: elearning-react-app
jobs:
  build-image-node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add details to the Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{vars.DOCKER_USER_NAME}}/${{env.NODE_DOCKER_IMAGE}}
          tags: |
            latest
            v1.0.${{ github.run_number }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Node.js Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./elearning-auth
          file: ./elearning-auth/Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  build-image-react:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add details to the Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{vars.DOCKER_USER_NAME}}/${{env.REACT_DOCKER_IMAGE}}
          tags: |
            latest
            v1.0.${{ github.run_number }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push React.js Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./learninghub
          file: ./learninghub/Dockerfile.prod
          push: true
          build-args: |
            REACT_APP_API_URL=http://localhost:2000
          tags: ${{ steps.meta.outputs.tags }}
